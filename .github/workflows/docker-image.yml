name: Docker JavaCard CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: recursive
    - name: Build Docker image
      run: |
        docker build --quiet --tag docker-javacard .
    - name: "Build Example: Ant"
      run: |
        docker run --rm --env JAVA_HOME=/usr/lib/jvm/temurin-8-jdk-amd64 --volume ./examples/ant/helloworld:/applet docker-javacard ant test applet
    - name: "Build Example: Gradle"
      run: |
        docker run --rm --env JAVA_HOME=/usr/lib/jvm/temurin-8-jdk-amd64 --volume ./examples/gradle/helloworld:/applet docker-javacard gradle clean buildJavaCard test
    - name: "Build Example: Maven"
      run: |
        docker run --rm --volume .:/applet --workdir /applet/examples/maven/helloworld docker-javacard mvn --no-transfer-progress -Djava.compiler.main.path='/usr/lib/jvm/temurin-8-jdk-amd64/bin/javac' clean verify
    - name: Change file ownership
      run: |
        sudo chown -R runner:runner ./examples/ant/helloworld/build/
        sudo chown -R runner:runner ./examples/gradle/helloworld/build/
        sudo chown -R runner:runner ./examples/maven/helloworld/target/
    - name: Rename artifact files
      run: |
        mkdir -p ./artifacts/cap-files
        mv ./examples/ant/helloworld/build/helloworld.cap ./artifacts/cap-files/helloworld-ant.cap
        mv ./examples/gradle/helloworld/build/javacard/applet.cap ./artifacts/cap-files/helloworld-gradle.cap
        mv ./examples/maven/helloworld/target/010203040506.cap ./artifacts/cap-files/helloworld-maven.cap
        ls -lh ./artifacts/cap-files/
    - name: Upload .cap files (JavaCard applets)
      uses: actions/upload-artifact@v4
      with:
        name: cap-files
        path: |
          ./artifacts/cap-files/
  run-in-simulator:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: recursive
    - name: Download Oracle JavaCard Simulator
      env:
        FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
        FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
      run: |
        wget \
          --no-verbose \
          --directory-prefix=./external/oracle_javacard_simulator/ \
          --user="${FTP_USERNAME}" --password="${FTP_PASSWORD}" \
          ftp://ftpupload.net/htdocs/download/java_card_devkit_simulator-linux-bin-v25.0-b_474-23-APR-2025.tar.gz
    - name: Build Docker image
      run: |
        docker build --quiet --build-arg JAVACARD_SIMULATOR="java_card_devkit_simulator-linux-bin-v25.0-b_474-23-APR-2025.tar.gz" --tag docker-javacard .
    - uses: actions/download-artifact@v4
      with:
        name: ./helloworld-maven.cap
        path: ./artifacts/cap-files/helloworld-maven.cap
    - name: Run .cap file
      run: |
        docker run --rm --volume ./helloworld-maven.cap:/applet/helloworld-maven.cap --env START_JAVACARD_SIMULATOR=y docker-javacard \
          bash -c 'gp() { java -jar /javacard/gp-v24.10.15.jar "$@"; } && unset GP_KEY GP_KEY_ENC GP_KEY_MAC GP_KEY_DEK && gp --install /applet/helloworld-maven.cap && gpshell ./hello.gpshell'
